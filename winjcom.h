/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_engidea_win32jcom_WinjcomPort */

#ifndef _Included_com_engidea_win32jcom_WinjcomPort
#define _Included_com_engidea_win32jcom_WinjcomPort
#ifdef __cplusplus
extern "C" {
#endif
#undef com_engidea_win32jcom_WinjcomPort_DATABITS_5
#define com_engidea_win32jcom_WinjcomPort_DATABITS_5 5L
#undef com_engidea_win32jcom_WinjcomPort_DATABITS_6
#define com_engidea_win32jcom_WinjcomPort_DATABITS_6 6L
#undef com_engidea_win32jcom_WinjcomPort_DATABITS_7
#define com_engidea_win32jcom_WinjcomPort_DATABITS_7 7L
#undef com_engidea_win32jcom_WinjcomPort_DATABITS_8
#define com_engidea_win32jcom_WinjcomPort_DATABITS_8 8L
#undef com_engidea_win32jcom_WinjcomPort_PARITY_NONE
#define com_engidea_win32jcom_WinjcomPort_PARITY_NONE 0L
#undef com_engidea_win32jcom_WinjcomPort_PARITY_ODD
#define com_engidea_win32jcom_WinjcomPort_PARITY_ODD 1L
#undef com_engidea_win32jcom_WinjcomPort_PARITY_EVEN
#define com_engidea_win32jcom_WinjcomPort_PARITY_EVEN 2L
#undef com_engidea_win32jcom_WinjcomPort_PARITY_MARK
#define com_engidea_win32jcom_WinjcomPort_PARITY_MARK 3L
#undef com_engidea_win32jcom_WinjcomPort_PARITY_SPACE
#define com_engidea_win32jcom_WinjcomPort_PARITY_SPACE 4L
#undef com_engidea_win32jcom_WinjcomPort_STOPBITS_1
#define com_engidea_win32jcom_WinjcomPort_STOPBITS_1 1L
#undef com_engidea_win32jcom_WinjcomPort_STOPBITS_2
#define com_engidea_win32jcom_WinjcomPort_STOPBITS_2 2L
#undef com_engidea_win32jcom_WinjcomPort_STOPBITS_1_5
#define com_engidea_win32jcom_WinjcomPort_STOPBITS_1_5 3L
#undef com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_NONE
#define com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_NONE 0L
#undef com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_RTSCTS_IN
#define com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_RTSCTS_IN 1L
#undef com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_RTSCTS_OUT
#define com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_RTSCTS_OUT 2L
#undef com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_XONXOFF_IN
#define com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_XONXOFF_IN 4L
#undef com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_XONXOFF_OUT
#define com_engidea_win32jcom_WinjcomPort_FLOWCONTROL_XONXOFF_OUT 8L
#undef com_engidea_win32jcom_WinjcomPort_DCB_BAUDRATE
#define com_engidea_win32jcom_WinjcomPort_DCB_BAUDRATE 1L
#undef com_engidea_win32jcom_WinjcomPort_DCB_DATABITS
#define com_engidea_win32jcom_WinjcomPort_DCB_DATABITS 2L
#undef com_engidea_win32jcom_WinjcomPort_DCB_STOPBITS
#define com_engidea_win32jcom_WinjcomPort_DCB_STOPBITS 3L
#undef com_engidea_win32jcom_WinjcomPort_DCB_PARITY
#define com_engidea_win32jcom_WinjcomPort_DCB_PARITY 4L
#undef com_engidea_win32jcom_WinjcomPort_DCB_FLOWCONTROL
#define com_engidea_win32jcom_WinjcomPort_DCB_FLOWCONTROL 5L
#undef com_engidea_win32jcom_WinjcomPort_ESC_SETRTS
#define com_engidea_win32jcom_WinjcomPort_ESC_SETRTS 3L
#undef com_engidea_win32jcom_WinjcomPort_ESC_CLRRTS
#define com_engidea_win32jcom_WinjcomPort_ESC_CLRRTS 4L
#undef com_engidea_win32jcom_WinjcomPort_ESC_SETDTR
#define com_engidea_win32jcom_WinjcomPort_ESC_SETDTR 5L
#undef com_engidea_win32jcom_WinjcomPort_ESC_CLRDTR
#define com_engidea_win32jcom_WinjcomPort_ESC_CLRDTR 6L
#undef com_engidea_win32jcom_WinjcomPort_ESC_SETBREAK
#define com_engidea_win32jcom_WinjcomPort_ESC_SETBREAK 8L
#undef com_engidea_win32jcom_WinjcomPort_ESC_CLRBREAk
#define com_engidea_win32jcom_WinjcomPort_ESC_CLRBREAk 9L
#undef com_engidea_win32jcom_WinjcomPort_MS_CTS_ON
#define com_engidea_win32jcom_WinjcomPort_MS_CTS_ON 16L
#undef com_engidea_win32jcom_WinjcomPort_MS_DSR_ON
#define com_engidea_win32jcom_WinjcomPort_MS_DSR_ON 32L
#undef com_engidea_win32jcom_WinjcomPort_MS_RING_ON
#define com_engidea_win32jcom_WinjcomPort_MS_RING_ON 64L
#undef com_engidea_win32jcom_WinjcomPort_MS_RLSD_ON
#define com_engidea_win32jcom_WinjcomPort_MS_RLSD_ON 128L
#undef com_engidea_win32jcom_WinjcomPort_EV_RXCHAR
#define com_engidea_win32jcom_WinjcomPort_EV_RXCHAR 1L
#undef com_engidea_win32jcom_WinjcomPort_EV_CTS
#define com_engidea_win32jcom_WinjcomPort_EV_CTS 8L
#undef com_engidea_win32jcom_WinjcomPort_EV_TXEMPTY
#define com_engidea_win32jcom_WinjcomPort_EV_TXEMPTY 4L
#undef com_engidea_win32jcom_WinjcomPort_EV_DSR
#define com_engidea_win32jcom_WinjcomPort_EV_DSR 16L
#undef com_engidea_win32jcom_WinjcomPort_EV_BREAK
#define com_engidea_win32jcom_WinjcomPort_EV_BREAK 64L
#undef com_engidea_win32jcom_WinjcomPort_EV_ERR
#define com_engidea_win32jcom_WinjcomPort_EV_ERR 128L
#undef com_engidea_win32jcom_WinjcomPort_EV_RING
#define com_engidea_win32jcom_WinjcomPort_EV_RING 256L
#undef com_engidea_win32jcom_WinjcomPort_EV_RLSD
#define com_engidea_win32jcom_WinjcomPort_EV_RLSD 32L
#undef com_engidea_win32jcom_WinjcomPort_COMSTAT_cbInQue
#define com_engidea_win32jcom_WinjcomPort_COMSTAT_cbInQue 1L
/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeOpen
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeOpen
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeSetSerialPortParams
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeSetSerialPortParams
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeGetPortParam
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeGetPortParam
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeSetPortParam
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeSetPortParam
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeSetCommTimeouts
 * Signature: (IIIIII)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeSetCommTimeouts
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeGetReceiveTotalTimeoutConstant
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeGetReceiveTotalTimeoutConstant
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeSendEscape
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeSendEscape
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeGetModemStatus
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeGetModemStatus
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeNotifyEnable
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeNotifyEnable
  (JNIEnv *, jobject, jint, jint, jboolean);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeWriteArray
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeWriteArray
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativePurgeComm
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativePurgeComm
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeClearCommError
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeClearCommError
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeReadArray
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeReadArray
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeClose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeClose
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomPort
 * Method:    nativeGetCommEvent
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_engidea_win32jcom_WinjcomPort_nativeGetCommEvent
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_engidea_win32jcom_WinjcomPort_MonitorThread */

#ifndef _Included_com_engidea_win32jcom_WinjcomPort_MonitorThread
#define _Included_com_engidea_win32jcom_WinjcomPort_MonitorThread
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_engidea_win32jcom_WinjcomIdentifier */

#ifndef _Included_com_engidea_win32jcom_WinjcomIdentifier
#define _Included_com_engidea_win32jcom_WinjcomIdentifier
#ifdef __cplusplus
extern "C" {
#endif
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_INIT
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_INIT 1L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_TEST_PORT
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_TEST_PORT 2L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_ERRORS
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_ERRORS 4L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_OPEN_PORT
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_OPEN_PORT 8L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_WRITE
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_WRITE 16L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_READ
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_READ 32L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_COMMEVENT
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_COMMEVENT 64L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_POPARAMS
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_POPARAMS 128L
#undef com_engidea_win32jcom_WinjcomIdentifier_DEBUG_CLOSE_PORT
#define com_engidea_win32jcom_WinjcomIdentifier_DEBUG_CLOSE_PORT 256L
/*
 * Class:     com_engidea_win32jcom_WinjcomIdentifier
 * Method:    nativeInitialize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_engidea_win32jcom_WinjcomIdentifier_nativeInitialize
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_engidea_win32jcom_WinjcomIdentifier
 * Method:    nativeIsPortPresent
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_engidea_win32jcom_WinjcomIdentifier_nativeIsPortPresent
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_engidea_comm_SerialPort */

#ifndef _Included_com_engidea_comm_SerialPort
#define _Included_com_engidea_comm_SerialPort
#ifdef __cplusplus
extern "C" {
#endif
#undef com_engidea_comm_SerialPort_DATABITS_5
#define com_engidea_comm_SerialPort_DATABITS_5 5L
#undef com_engidea_comm_SerialPort_DATABITS_6
#define com_engidea_comm_SerialPort_DATABITS_6 6L
#undef com_engidea_comm_SerialPort_DATABITS_7
#define com_engidea_comm_SerialPort_DATABITS_7 7L
#undef com_engidea_comm_SerialPort_DATABITS_8
#define com_engidea_comm_SerialPort_DATABITS_8 8L
#undef com_engidea_comm_SerialPort_PARITY_NONE
#define com_engidea_comm_SerialPort_PARITY_NONE 0L
#undef com_engidea_comm_SerialPort_PARITY_ODD
#define com_engidea_comm_SerialPort_PARITY_ODD 1L
#undef com_engidea_comm_SerialPort_PARITY_EVEN
#define com_engidea_comm_SerialPort_PARITY_EVEN 2L
#undef com_engidea_comm_SerialPort_PARITY_MARK
#define com_engidea_comm_SerialPort_PARITY_MARK 3L
#undef com_engidea_comm_SerialPort_PARITY_SPACE
#define com_engidea_comm_SerialPort_PARITY_SPACE 4L
#undef com_engidea_comm_SerialPort_STOPBITS_1
#define com_engidea_comm_SerialPort_STOPBITS_1 1L
#undef com_engidea_comm_SerialPort_STOPBITS_2
#define com_engidea_comm_SerialPort_STOPBITS_2 2L
#undef com_engidea_comm_SerialPort_STOPBITS_1_5
#define com_engidea_comm_SerialPort_STOPBITS_1_5 3L
#undef com_engidea_comm_SerialPort_FLOWCONTROL_NONE
#define com_engidea_comm_SerialPort_FLOWCONTROL_NONE 0L
#undef com_engidea_comm_SerialPort_FLOWCONTROL_RTSCTS_IN
#define com_engidea_comm_SerialPort_FLOWCONTROL_RTSCTS_IN 1L
#undef com_engidea_comm_SerialPort_FLOWCONTROL_RTSCTS_OUT
#define com_engidea_comm_SerialPort_FLOWCONTROL_RTSCTS_OUT 2L
#undef com_engidea_comm_SerialPort_FLOWCONTROL_XONXOFF_IN
#define com_engidea_comm_SerialPort_FLOWCONTROL_XONXOFF_IN 4L
#undef com_engidea_comm_SerialPort_FLOWCONTROL_XONXOFF_OUT
#define com_engidea_comm_SerialPort_FLOWCONTROL_XONXOFF_OUT 8L
#ifdef __cplusplus
}
#endif
#endif
